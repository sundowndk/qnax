<%Include ("../includes/init.stpl")%>

<%title = "QNAX - Subscriptions"%>
<%contentxml = "xml/subscriptions/subscriptions.xml"%>

<html>			
	<%Include ($header)%>
	
	<script language="JavaScript">
		// #######################################################################################################################################
		// # CUSTOMERS
		// #######################################################################################################################################
		var subscriptions =
		{
			// ###################################################################################################################################
			// # CUSTOMERS.CREATE
			// ###################################################################################################################################		
			create : function ()		
			{
				subscriptions.edit (qnaxLib.subscription.new ("1d435ce4-7459-4d9f-88b9-a301fe546cb2", qnaxLib.enums.subscriptionType.voipSIPAccount));
			},

			// ###################################################################################################################################
			// # CUSTOMERS.EDIT
			// ###################################################################################################################################					
			edit : function (Item, Mode)
			{
				// DEFAULTS
				if (!Item) Item = qnaxLib.customer.load (UI.elements.content.customers.getItem ()["id"]);
				if (!Mode) Mode = "edit"; 					
			
				// SAVE				
				var save =		function ()
								{					
									var item = get ();
									qnaxLib.customer.save (item);
									
									switch (Mode)
									{
										case "new":
										{											
											UI.elements.content.customers.addItem (item);	
											break;										
										}
										
										case "edit":
										{
											UI.elements.content.customers.setItem (item);
											break;
										}									
									}
									
									UI.modal.edit.dispose ();
								};

				// REFRESH
				var refresh =	function ()
								{
									if (sorento.helpers.compareItems ({array1: Item, array2: get ()}) && UI.modal.edit.getUIElement ("name").getAttribute ("value") != "")
									{
										UI.modal.edit.getUIElement ("save").setAttribute ("disabled", false);
									}
									else
									{
										UI.modal.edit.getUIElement ("save").setAttribute ("disabled", true);									
									}
								
								};						
							
				// SET											
				var set =		function ()
								{		
									UI.modal.edit.getUIElement ("name").setAttribute ("value", Item["name"]);
								};
				// GET			
				var get =		function ()
								{
									var item = {};
									item["id"] = Item["id"];
									item["name"] = UI.modal.edit.getUIElement ("name").getAttribute ("value");
									return item;
								}

				// INIT
				sorento.console.modal.create ({tag: "edit", SUIXML: "/qnax/xml/subscriptions/edit.xml"});
												
				//UI.modal.edit.getUIElement ("save").setAttribute ("onClick", save);	
				//UI.modal.edit.getUIElement ("close").setAttribute ("onClick", UI.modal.edit.dispose);	
				
				//switch (Mode)
				//{
				//	case "new":
				//	{
				//		UI.modal.edit.getUIElement ("container").setAttribute ("title", "Create new customer");
				//		break;					
				//	}
				//	
				//	case "edit":
				//	{
				//		UI.modal.edit.getUIElement ("container").setAttribute ("title", "Edit customer");						
				//		break;
				//	}				
				//}
				
				//
				//set ();
				
				// SHOW
				UI.modal.edit.show ();					
			},
			
			// ###################################################################################################################################
			// # CUSTOMERS.DELETE
			// ###################################################################################################################################					
			delete : function ()				
			{
				var action = 	function (result)
								{
									if (result == 1)
									{
										var id = UI.elements.content.customers.getItem ()["id"];
										if (qnaxLib.customer.remove (id))
										{
											UI.elements.content.customers.removeItem ();
										}										
									}
								};
		
				sorento.console.modal.question ({text: "Do you really want to delete this customer ?", buttonLabel: "Yes|No", onDone: action});			
			}
		}
	
		// ##########################################################################################################################################
		// # UI
		// ##########################################################################################################################################	
		UI.init = 		function ()
						{
//		 					UI.elements.content.customers.setAttribute ("onChange", UI.refresh);
			 	
							UI.elements.content.create.setAttribute ("onClick", subscriptions.create);
							UI.elements.content.edit.setAttribute ("onClick", subscriptions.edit);
							UI.elements.content.delete.setAttribute ("onClick", subscriptions.delete);
			 				 				 	
	//						UI.refresh ();			 
	//						UI.update ();
							SNDK.SUI.init ();
						};
					
		UI.refresh = 	function ()
						{					
			 				if (UI.elements.content.customers.getItem ())
			 				{
			 					UI.elements.content.edit.setAttribute ("disabled", false);
			 					UI.elements.content.delete.setAttribute ("disabled", false);
			 				}
			 				else
			 				{
			 					UI.elements.content.edit.setAttribute ("disabled", true);
			 					UI.elements.content.delete.setAttribute ("disabled", true);
			 				}
						};

		UI.update = 	function ()
						{
			 				UI.elements.content.customers.setItems (qnaxLib.customer.list ());
						};				 	

		UI.init ();
		
	</script>
	
	<%Include ($body)%>
	
</html>