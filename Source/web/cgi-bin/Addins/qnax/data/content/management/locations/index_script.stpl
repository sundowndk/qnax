	<script language = "JavaScript">			
		// #######################################################################################################################################
		// # LOCATIONS
		// #######################################################################################################################################
		var locations =
		{
			// ###################################################################################################################################
			// # LOCATIONS.CREATE
			// ###################################################################################################################################
			create : function ()
			{			
				locations.edit ({edit: false});									
			},

			// ######################################################################################################################################
			// # LOCATIONS.EDIT
			// ######################################################################################################################################
			edit : function (attributes)
			{					
				if (!attributes) attributes = new Array ();				
																							
				// SAVE
				var save =		function ()
								{
									var location = get ();
									
									qnaxLib.management.location.save (location);
									
									switch (attributes.mode)
									{
										case "new":
										{
											UI.elements.content.locations.addItem (qnaxLib.management.location.load (location.id));
											break;
										}
										
										case "edit":
										{
											UI.elements.content.locations.setItem (qnaxLib.management.location.load (location.id));
											break;
										}
									}
																	
									modal.dispose ();
								};
								
				// onChange
				var onChange = 	function ()
								{
									if ((sConsole.helpers.compareItems ({array1: attributes.current, array2: get ()})) && (modal.getUIElement ("name").getAttribute ("value") != ""))
									{
										modal.getUIElement ("save").setAttribute ("disabled", false);
									}
									else
									{
										modal.getUIElement ("save").setAttribute ("disabled", true);									
									}
								};
													
				// SET	
				var set = 		function ()
								{
									if (attributes.edit == false)
									{																																																
											attributes.mode = "new";
											attributes.title = "Create new location";
											attributes.buttonLabel = "Create|Close";						
											attributes.current = qnaxLib.management.location.new ();
											
											var parent = UI.elements.content.locations.getItem ();
											if (parent)
											{
												attributes.current.parentid = parent.id;
											}
									}
									else
									{
											attributes.mode = "edit";
											attributes.title = "Edit location";
											attributes.buttonLabel = "Save|Close";													
									}
						
									modal.getUIElement ("name").setAttribute ("value", attributes.current["name"]);
								};
						
				// GET
				var get = 		function ()
								{
									var item = {};
									item["id"] = attributes.current["id"];
									item["parentid"] = attributes.current["parentid"];
									item["name"] = modal.getUIElement ("name").getAttribute ("value");	
						
									return item;
								};
												
				// INIT				
				var modal = new sConsole.modal.window ({SUIXML: "<%Write ($url)%>xml/modal/edit/location.xml"});
				
				// SET
				set ();						
				
				modal.getUIElement ("name").setAttribute ("onChange", onChange);					
				modal.getUIElement ("save").setAttribute ("onClick", save);
				modal.getUIElement ("close").setAttribute ("onClick", modal.dispose);	
		
				modal.getUIElement ("container").setAttribute ("title", attributes.title);
				modal.getUIElement ("save").setAttribute ("label", attributes.buttonLabel.split ("|")[0]);
				modal.getUIElement ("close").setAttribute ("label", attributes.buttonLabel.split ("|")[1]);
							
				// SHOW
				modal.show ();	
			},
			
			// ######################################################################################################################################
			// # LOCATIONS.DELETE
			// ######################################################################################################################################
			delete : function ()
			{
				var action =	function (result)
								{
									if (result == 1)
									{
										if (qnaxLib.management.location.delete (UI.elements.content.locations.getItem ()["id"]))
										{
											UI.elements.content.locations.removeItem ();
										}										
									}
								};
		
				sConsole.modal.question ({title: "Delete location", text: "Do you really want to delete this location ?", buttonLabel: "Yes|No", onDone: action});					
			}			
		};	
									
		// ##########################################################################################################################################
		// # UI
		// ##########################################################################################################################################
		UI.init = 		function ()
						{
							UI.elements.content.locations.setAttribute ("onChange", UI.onChange);
			
							UI.elements.content.locationscreate.setAttribute ("onClick", locations.create);
							UI.elements.content.locationsedit.setAttribute ("onClick", function () {locations.edit ({current: qnaxLib.management.location.load (UI.elements.content.locations.getItem ()["id"])});});
							UI.elements.content.locationsdelete.setAttribute ("onClick", locations.delete);
						 				 				
							UI.set ();
							SNDK.SUI.init ();
						};
						
		UI.onChange = 	function ()
						{	
							var item = UI.elements.content.locations.getItem ();
							
							if (item)
							{								
		 						UI.elements.content.locationsedit.setAttribute ("disabled", false);
	 							UI.elements.content.locationsdelete.setAttribute ("disabled", false);
	 						}
			 				else
		 					{			 						
		 						UI.elements.content.locationsedit.setAttribute ("disabled", true);
		 						UI.elements.content.locationsdelete.setAttribute ("disabled", true);
		 					}			 								 					
						};		
						
		UI.set = 		function ()
						{						
							UI.elements.content.locations.addItems (qnaxLib.management.location.list ());
							UI.onChange ();			 
						};								
		UI.init ();
						
	</script>

