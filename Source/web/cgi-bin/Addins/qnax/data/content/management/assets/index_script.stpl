<script language = "JavaScript">		
		// #######################################################################################################################################
		// # ASSETS
		// #######################################################################################################################################
		var assets =
		{
			// ###################################################################################################################################
			// # ASSETS.CREATE
			// ###################################################################################################################################
			create : function ()
			{			
				if (UI.elements.content.assets.getItem ()["type2"] == "Server")	
				{
					var onDone =	function (server)
									{									
										qnaxLib.management.server.save (server);										
										UI.elements.content.assets.addItem (qnaxLib.management.server.load (server.id));
									};
									
					qnaxLib.modal.edit.server ({title: "Add server", buttonLabel: "Create|Close", onDone: onDone});				
				}		
			},

			// ######################################################################################################################################
			// # ASSETS.EDIT
			// ######################################################################################################################################
			edit : function (attributes)
			{	
				if (!attributes) attributes = new Array ();
				if (!attributes.temp) attributes.temp = new Array ();
							
				if ((UI.elements.content.assets.getItem ()["type"] == "Server") || (UI.elements.content.assets.getItem ()["type2"] == "Server"))
				{
					if (UI.elements.content.assets.getItem ()["type2"] == "Server")	
					{
						attributes.edit = false;	
						attributes.title = "Add server";
						attributes.buttonLabel1 = "Create";					
						attributes.buttonLabel2 = "Close";					
						attributes.current = {};						
						attributes.current.name = "";
						attributes.current.type =  "server";
					}
					else
					{
						attributes.edit = true;
						attributes.title = "Edit server";
						attributes.buttonLabel1 = "Save";
						attributes.buttonLabel2 = "Close"
						attributes.current = qnaxLib.management.server.load (UI.elements.content.assets.getItem ()["id"]);					
					}
				
					var chooseLocation =	function ()
											{
												var onDone =	function (location)
																{								
																	if (location)
																	{									
																		attributes.temp.location = location;		
																		modal.getUIElement ("location").setAttribute ("value", location.name);															
																	}
																};
														
																qnaxLib.modal.chooser.location ({onDone: onDone});
											};
											
					var chooseOS =			function ()
											{
												var onDone =	function (os)
																{		
																	if (os)
																	{															
																		attributes.temp.os = os;		
																		modal.getUIElement ("os").setAttribute ("value", os.name);
																	}
																};
														
																qnaxLib.modal.chooser.OS ({onDone: onDone});
											};											
								
					// ######################################################################################################################################
					// # HARDWARE
					// ######################################################################################################################################
					var hardware =
					{
						// ADD
						add : 				function ()
											{
												hardware.edit ({edit: false});
											},
											
						// EDIT			
						edit :				function (attributes)
											{
												if (!attributes) attributes = new Array ();
												if (attributes.edit == null) attributes.edit = true;			
			
												if (!attributes.edit)
												{				
													attributes.title = "Add new hardware";
													attributes.buttonLabel1 = "Add";
													attributes.buttonLabel2 = "Close";													
												}
												else
												{				
													attributes.title = "Edit Hardware";
													attributes.buttonLabel1 = "Apply";
													attributes.buttonLabel2 = "Close";
													attributes.current = modal.getUIElement ("hardware").getItem ();													
												}		
												
												// SET
												var set =		function ()
																{	
																	if (attributes.edit)
																	{
																		modal2.getUIElement ("type").setAttribute ("selectedItemByValue", attributes.current.type);
																		modal2.getUIElement ("data").setAttribute ("value",  attributes.current.data); 
																	}
																};
												
												// GET
												var get =	 	function ()
																{
																	var item = {};
																	item.type = modal2.getUIElement ("type").getAttribute ("selectedItem").value
																	item.data = modal2.getUIElement ("data").getAttribute ("value");
																	
																	return item;
																};
														
												// ONCHANGE
												var onChange = 	function ()
																{};
																
												// ONBUTTON1
												var onButton1 =	function ()
																{
																	if (attributes.edit)
																	{																	
																		modal.getUIElement ("hardware").setItem (get ());	
																	}
																	else
																	{																	
																		modal.getUIElement ("hardware").addItem (get ());	
																	}
																
																	modal2.dispose ();
																};
																
												// INIT				
												var xml = "";
												xml += '<sui elementheight="50px">';
												xml += '	<canvas width="600px" height="230px" canScroll="false">';
												xml += '		<container tag="container" title="" icon="Icon32Edit" stylesheet="SUIContainerModal">';
												xml += '			<layoutbox type="horizontal" stylesheet="LayoutboxNoborder">';
												xml += '				<panel size="*">';
												xml += '					<layoutbox type="horizontal">';	
												xml += '						<panel size="%elementheight%">';
												xml += '							<layoutbox type="vertical">';
												xml += '								<panel size="100px">';
												xml += '									<label text="Type"/>';
												xml += '								</panel>';		
												xml += '								<panel size="*">';
												xml += '									<dropbox tag="type" width="100%" focus="true">';
												xml += '										<item value="cpu" label="cpu" />';
												xml += '										<item value="ram" label="ram" />';
												xml += '										<item value="harddisk" label="harddisk" />';												
												xml += '									</dropbox>';
												xml += '								</panel>';				
												xml += '							</layoutbox>';
												xml += '						</panel>';
												xml += '					</layoutbox>';
												xml += '				</panel>';
												xml += '				<panel size="*">';
												xml += '					<layoutbox type="horizontal">';	
												xml += '						<panel size="%elementheight%">';
												xml += '							<layoutbox type="vertical">';
												xml += '								<panel size="100px">';
												xml += '									<label text="Spec."/>';
												xml += '								</panel>';		
												xml += '								<panel size="*">';
												xml += '									<textbox tag="data" width="100%" />';
												xml += '								</panel>';				
												xml += '							</layoutbox>';
												xml += '						</panel>';
												xml += '					</layoutbox>';
												xml += '				</panel>';
												xml += '				<panel size="45px">';
												xml += '					<layoutbox type="vertical" stylesheet="LayoutboxNoborder">';
												xml += '						<panel size="*">';
												xml += '						</panel>';
												xml += '						<panel size="210px">';
												xml += '							<button tag="button1" label="Save" width="100px" disabled="false"/>';
												xml += '							<button tag="button2" label="Close" width="100px" />';
												xml += '						</panel>';					
												xml += '					</layoutbox>';
												xml += '				</panel>';
												xml += '			</layoutbox>';
												xml += '		</container>';
												xml += '	</canvas>';
												xml += '</sui>';			
					
												var modal2 = new sConsole.modal.window ({XML: xml});
																																																	
												modal2.getUIElement ("data").setAttribute ("onChange", onChange);
													
												modal2.getUIElement ("button1").setAttribute ("onClick", onButton1);
												modal2.getUIElement ("button2").setAttribute ("onClick", modal2.dispose);	
											
												modal2.getUIElement ("container").setAttribute ("title", attributes.title);
												modal2.getUIElement ("button1").setAttribute ("label", attributes.buttonLabel1);
												modal2.getUIElement ("button2").setAttribute ("label", attributes.buttonLabel2);
				
												// SET
												set ();						
												
												// SHOW	
												modal2.show ();																																																							
											},
											
						// REMOVE
						remove :			function ()
											{
												modal.getUIElement ("hardware").removeItem ();
											}
					};
					
					// ######################################################################################################################################
					// # SERVICE
					// ######################################################################################################################################
					var service =
					{
						add : function ()
						{
							var onDone =	function (service)
											{								
													if (service)
													{																								
														modal.getUIElement ("services").addItem (service);
													}
											};
												
							qnaxLib.modal.chooser.serverService ({onDone: onDone});
						},
						
						remove : function ()
						{
							modal.getUIElement ("services").removeItem ();
						}
					};
					
					// SET	
					var set = 				function ()
											{
												if (attributes.edit)
												{
													modal.getUIElement ("name").setAttribute ("value", attributes.current["name"]);
													modal.getUIElement ("tag").setAttribute ("value", attributes.current["tag"]);													
													modal.getUIElement ("notes").setAttribute ("value", attributes.current["notes"]);
													
													modal.getUIElement ("location").setAttribute ("value", attributes.current["location"].name);
													attributes.temp.location = attributes.current["location"];
																																						
													if (attributes.current.os)
													{
														modal.getUIElement ("os").setAttribute ("value", attributes.current["os"].name);
														attributes.temp.os = attributes.current["os"];
													}
																										
													var cpu = {};		
				 									cpu["type"] = "";
													cpu["data"] = "cpu";																																
													
													var ram = {};
													ram["type"] = "";
													ram["data"] = "ram";
													
													var harddisk = {};
													harddisk["type"] = "";
													harddisk["data"] = "harddisk";
																										
													modal.getUIElement ("hardware").addItem (cpu);
													modal.getUIElement ("hardware").addItem (ram);
													modal.getUIElement ("hardware").addItem (harddisk);
													
													modal.getUIElement ("hardware").addItems (attributes.current["hardware"]);			
													
													modal.getUIElement ("services").setItems (attributes.current["services"]);																																														
												}
											};
						
					// GET
					var get = 				function ()
											{
												var item = {};
												if (attributes.edit)
												{
													item["id"] = attributes.current["id"];
													item["type"] = attributes.current["type"];
												}
												
												item["location"] = attributes.temp["location"];
												
												
												item["name"] = modal.getUIElement ("name").getAttribute ("value");												
												item["tag"] = modal.getUIElement ("tag").getAttribute ("value");	
												item["services"] = modal.getUIElement ("services").getItems ();	
												item["notes"] = modal.getUIElement ("notes").getAttribute ("value");	
												
												if (attributes.temp.os)
												{
													item["os"] = attributes.temp["os"];
												}
												
												item["hardware"] = new Array ();
												var hardware = modal.getUIElement ("hardware").getItems ();												
												for (index in hardware)
												{
													if (hardware[index].type != "")
													{
														item["hardware"][item["hardware"].length] = hardware[index];
													}
												}

												return item;
											};
								
					var onButton1 =			function ()
											{
												if (attributes.edit)
												{
													qnaxLib.management.server.save (get ());
													UI.elements.content.assets.setItem (get ());
												}
												else
												{
													attributes.current = qnaxLib.management.server.new (attributes.temp.location.id);
													
													qnaxLib.management.server.save (get ());
													UI.elements.content.assets.addItem (get ());
												}
												
												modal.dispose ();
											};		
						
					// ONCHANGE
					var onChange =			function ()
											{													
												if ((sConsole.helpers.compareItems ({array1: attributes.current, array2: get ()})) && (modal.getUIElement ("name").getAttribute ("value") != ""))
												{
													modal.getUIElement ("button1").setAttribute ("disabled", false);
												}
												else
												{
													modal.getUIElement ("button1").setAttribute ("disabled", true);									
												}
											
												// HARDWARE
												var hardware = modal.getUIElement ("hardware").getItem ();													
												if (hardware)
												{
													if (hardware.type != "") 											
													{
			 											modal.getUIElement ("hardwareedit").setAttribute ("disabled", false);
		 												modal.getUIElement ("hardwareremove").setAttribute ("disabled", false);
		 											}
									 				else
			 										{				 											
			 											modal.getUIElement ("hardwareedit").setAttribute ("disabled", true);
			 											modal.getUIElement ("hardwareremove").setAttribute ("disabled", true);
			 										}			 								 					
			 									}			 			
			 									
												// SERVICES
												var services = modal.getUIElement ("services").getItem ();
												if (services)
												{															 											
	 												modal.getUIElement ("serviceremove").setAttribute ("disabled", false);
	 											}
								 				else
		 										{				 													 											
		 											modal.getUIElement ("serviceremove").setAttribute ("disabled", true);
		 										}			 								 					
											};									
												
					// INIT				
					var modal = new sConsole.modal.window ({SUIXML: "/qnax/xml/modal/edit/server.xml"});
																																								
					modal.getUIElement ("name").setAttribute ("onChange", onChange);
					modal.getUIElement ("tag").setAttribute ("onChange", onChange);					
					modal.getUIElement ("chooselocation").setAttribute ("onClick", chooseLocation);
					modal.getUIElement ("chooseos").setAttribute ("onClick", chooseOS);
					
					modal.getUIElement ("hardware").setAttribute ("onChange", onChange);
					modal.getUIElement ("hardwareadd").setAttribute ("onClick", hardware.add);
					modal.getUIElement ("hardwareedit").setAttribute ("onClick", hardware.edit);
					modal.getUIElement ("hardwareremove").setAttribute ("onClick", hardware.remove);
					
					modal.getUIElement ("services").setAttribute ("onChange", onChange);
					modal.getUIElement ("serviceadd").setAttribute ("onClick", service.add);
					modal.getUIElement ("serviceremove").setAttribute ("onClick", service.remove);
					
					modal.getUIElement ("notes").setAttribute ("onChange", onChange);
				
					modal.getUIElement ("button1").setAttribute ("onClick", onButton1);
					modal.getUIElement ("button2").setAttribute ("onClick", modal.dispose);	
		
					modal.getUIElement ("container").setAttribute ("title", attributes.title);
					modal.getUIElement ("button1").setAttribute ("label", attributes.buttonLabel1);
					modal.getUIElement ("button2").setAttribute ("label", attributes.buttonLabel2);
				
					// SET
					set ();						
				}
		
				// SHOW
				modal.show ();	
			
			
//				if (UI.elements.content.assets.getItem ()["type"] == "Server")	
//				{
//					var onDone = 	function (server)
//									{
//										qnaxLib.management.server.save (server);
//										UI.elements.content.assets.setItem (qnaxLib.management.server.load (server.id));
//									};
//					
//									
//					qnaxLib.modal.edit.server ({title: "Edit server", buttonLabel: "Save|Close", onDone: onDone, server: UI.elements.content.assets.getItem ()});				
//				}
			},
			
			// ######################################################################################################################################
			// # ASSETS.DELETE
			// ######################################################################################################################################
			delete : function ()
			{
				var action =	function (result)
								{
									if (result == 1)
									{
										var id = UI.elements.content.assets.getItem ()["id"];
										var type = UI.elements.content.assets.getItem ()["type"];
										
										switch (type)
										{
											case "Server":
											{
												if (qnaxLib.management.server.delete (id))
												{
													UI.elements.content.assets.removeItem ();
												}										
											
												break;
											}										
										}										
									}
								};
		
				sConsole.modal.question ({title: "Delete asset", text: "Do you really want to delete this asset ?", buttonLabel: "Yes|No", onDone: action});					
			}			
		};	
											
		// ##########################################################################################################################################
		// # UI
		// ##########################################################################################################################################
		UI.init = 		function ()
						{
							UI.elements.content.assets.setAttribute ("onChange", UI.onChange);
			
							UI.elements.content.assetscreate.setAttribute ("onClick", assets.edit);
							UI.elements.content.assetsedit.setAttribute ("onClick", assets.edit);
							UI.elements.content.assetsdelete.setAttribute ("onClick", assets.delete);
						 				 				
							UI.set ();							
							SNDK.SUI.init ();
						};
						
		UI.onChange = 	function ()
						{	
							var item = UI.elements.content.assets.getItem ();
														
							if (item)
							{
								if (item.type2 != null) 											
								{
									UI.elements.content.assetscreate.setAttribute ("disabled", false);
			 						UI.elements.content.assetsedit.setAttribute ("disabled", true);
		 							UI.elements.content.assetsdelete.setAttribute ("disabled", true);
		 						}
				 				else
			 					{	
			 						UI.elements.content.assetscreate.setAttribute ("disabled", true);				 						
			 						UI.elements.content.assetsedit.setAttribute ("disabled", false);
			 						UI.elements.content.assetsdelete.setAttribute ("disabled", false);
			 					}			 								 					
			 				}			 				
						};		
						
		UI.set = 	function ()
						{						
			 				var servers = {};		
			 				servers["id"] = "Server";
							servers["name"] = "Servers";
							servers["type2"] = "Server";
							
							UI.elements.content.assets.addItem (servers);
													
							UI.elements.content.assets.addItems (qnaxLib.management.server.list ());
							
							UI.onChange ();
						};								
		UI.init ();
						
	</script>
