<%Include ("../../includes/init.stpl")%>

<%title = "QNAX - VOIP - CountryCodes"%>
<%contentxml = "xml/voip/countrycodes/countrycodes.xml"%>

<html>			
	<%Include ($header)%>

	<script language = "JavaScript">							
		// #######################################################################################################################################
		// # COUNTRYCODES
		// #######################################################################################################################################
		var countrycodes =
		{
			// ###################################################################################################################################
			// # COUNTRYCODES.CREATE
			// ###################################################################################################################################
			create : function ()
			{			
				countrycodes.edit (qnax.voip.countrycode.new (), "new");
			},

			// ######################################################################################################################################
			// # COUNTRYCODES.EDIT
			// ######################################################################################################################################
			edit : function (Item, Mode)
			{			
				// DEFAULTS						
				if (!Item) Item = qnax.voip.countrycode.load (UI.elements.content.countrycodes.getItem ()["id"]);
				if (!Mode) Mode = "edit"; 								
			
				// ##################################################################################################################################
				// # COUNTRYCODES.EDIT.DIALCODES
				// ##################################################################################################################################
				var dialcodes =
				{
					// ##############################################################################################################################
					// # COUNTRYCODES.EDIT.DIALCODES.ADD
					// ##############################################################################################################################		
					add : function ()
					{
						var item = new Array ();
						item["dialcode"] = "";
						dialcodes.edit (item, "new");			
					},
					
					// ##############################################################################################################################
					// # COUNTRYCODES.EDIT.DIALCODES.EDIT
					// ##############################################################################################################################									
					edit : function (Item, Mode)
					{								
						// DEFAULTS						
						if (!Item) Item = UI.modal.edit.getUIElement ("dialcodes").getItem ();
						if (!Mode) Mode = "edit"; 						
							
						// SAVE									
						var save = 		function ()
										{				
											switch (Mode)
											{
												case "new":
												{																																																						
													UI.modal.edit.getUIElement("dialcodes").addItem (get ());
													break;
												}
												
												case "edit":
												{Q
													UI.modal.edit.getUIElement("dialcodes").setItem (get ());
													break;
												}
											}

											UI.modal.dialcodesedit.dispose ();
										};

						// REFRESH						
						var refresh =	function ()
										{
											if (UI.modal.dialcodesedit.getUIElement ("dialcode").getAttribute ("value") != "")
											{
												UI.modal.dialcodesedit.getUIElement ("save").setAttribute ("disabled", false);
											}
											else
											{
												UI.modal.dialcodesedit.getUIElement ("save").setAttribute ("disabled", true);
											}										
										};		
									
						// SET	
						var set = 		function ()
										{
											UI.modal.dialcodesedit.getUIElement ("dialcode").setAttribute ("value", Item["dialcode"]);
										};
						
						// GET
						var get = 		function ()
										{
											var item = new Array ();
											item["dialcode"] = UI.modal.dialcodesedit.getUIElement ("dialcode").getAttribute ("value");							
											return item;
										};									
								
						// INIT				
						sorento.console.modal.create ({tag: "dialcodesedit", SUIXML: "/qnax/xml/voip/countrycodes/edit_dialcodes_edit.xml"});
																																												
						UI.modal.dialcodesedit.getUIElement ("dialcode").setAttribute ("onChange", refresh);						
						UI.modal.dialcodesedit.getUIElement ("save").setAttribute ("onClick", save);
						UI.modal.dialcodesedit.getUIElement ("close").setAttribute ("onClick", UI.modal.dialcodesedit.dispose);	
						
						switch (Mode)
						{
							case "new":
							{
								UI.modal.dialcodesedit.getUIElement ("container").setAttribute ("title", "Add dialcode");
								UI.modal.dialcodesedit.getUIElement ("save").setAttribute ("label", "Add");
								break;
							}
							
							case "edit":
							{
								UI.modal.dialcodesedit.getUIElement ("container").setAttribute ("title", "Edit dialcode");
								UI.modal.dialcodesedit.getUIElement ("save").setAttribute ("label", "Apply");
								break;
							}						
						}						
						
						// SET
						set ();						
						
						// SHOW
						UI.modal.dialcodesedit.show ();	
					},
					
					// ##############################################################################################################################
					// # COUNTRYCODES.EDIT.DIALCODES.REMOVE
					// ##############################################################################################################################							
					remove : function ()
					{
						UI.modal.edit.getUIElement ("dialcodes").removeItem ();
					}									
				}
				
				// ##################################################################################################################################
				// # COUNTRYCODES.EDIT.ALTERNATIVNAMES
				// ##################################################################################################################################				
				var alternativnames =
				{
					// ##############################################################################################################################
					// # COUNTRYCODES.EDIT.ALTERNATIVNAMES.ADD
					// ##############################################################################################################################							
					add : function ()
					{
						var item = new Array ();
						item["name"] = "";
						alternativnames.edit (item, "new");
					},

					// ##############################################################################################################################
					// # COUNTRYCODES.EDIT.ALTERNATIVNAMES.EDIT
					// ##############################################################################################################################												
					edit : function (Item, Mode)
					{				
						// DEFAULTS					 
						if (!Item) Item = UI.modal.edit.getUIElement ("alternativnames").getItem ();											
						if (!Mode) Mode = "edit"; 											
																			
						// SAVE									
						var save = 		function ()
										{			
											switch (Mode)
											{
												case "new":		
												{
													UI.modal.edit.getUIElement("alternativnames").addItem (get ());
													break;
												}
												
												case "edit":
												{
													UI.modal.edit.getUIElement("alternativnames").setItem (get ());
													break;
												}
											}
																																		
											UI.modal.alternativnamesedit.dispose ();														
										};

						// REFRESH						
						var refresh =	function ()
										{
											if (UI.modal.alternativnamesedit.getUIElement ("name").getAttribute ("value") != "")
											{
												UI.modal.alternativnamesedit.getUIElement ("save").setAttribute ("disabled", false);
											}
											else
											{
												UI.modal.alternativnamesedit.getUIElement ("save").setAttribute ("disabled", true);
											}										
										};		
									
						// SET	
						var set = 		function ()
										{
											UI.modal.alternativnamesedit.getUIElement ("name").setAttribute ("value", Item["name"]);
										};
						
						// GET
						var get = 		function ()
										{
											var item = new Array ();
											item["name"] = UI.modal.alternativnamesedit.getUIElement ("name").getAttribute ("value");							
											return item;
										};									
								
						// INIT				
						sorento.console.modal.create ({tag: "alternativnamesedit", SUIXML: "/qnax/xml/voip/countrycodes/edit_alternativnames_edit.xml"});
												
						UI.modal.alternativnamesedit.getUIElement("name").setAttribute ("onChange", refresh);						
						UI.modal.alternativnamesedit.getUIElement ("save").setAttribute ("onClick", save);
						UI.modal.alternativnamesedit.getUIElement ("close").setAttribute ("onClick", UI.modal.alternativnamesedit.dispose);	
						
						switch (Mode)
						{
							case "new":		
							{
								UI.modal.alternativnamesedit.getUIElement ("container").setAttribute ("title", "Add alternativname");
								UI.modal.alternativnamesedit.getUIElement ("save").setAttribute ("label", "Add");
								break;
							}
							
							case "edit":
							{
								UI.modal.alternativnamesedit.getUIElement ("container").setAttribute ("title", "Edit alternativname");
								UI.modal.alternativnamesedit.getUIElement ("save").setAttribute ("label", "Apply");								
								break;
							}
						}
						
						// SET
						set ();											
						
						// SHOW
						UI.modal.alternativnamesedit.show ();
					},
					
					// ##############################################################################################################################
					// # COUNTRYCODES.EDIT.ALTERNATIVNAMES.REMOVE
					// ##############################################################################################################################												
					remove : function ()
					{
						UI.modal.edit.getUIElement ("alternativnames").removeItem ();			
					}				
				}
														
				// REFRESH			
				var refresh =	function ()
								{													
									if (sorento.helpers.compareItems ({array1: Item, array2: get ()}) && UI.modal.edit.getUIElement ("name").getAttribute ("value") != "")
									{
										UI.modal.edit.getUIElement ("save").setAttribute ("disabled", false);
									}
									else
									{
										UI.modal.edit.getUIElement ("save").setAttribute ("disabled", true);									
									}
																
									if (UI.modal.edit.getUIElement ("dialcodes").getItem ())
			 						{
			 							UI.modal.edit.getUIElement ("dialcodesedit").setAttribute ("disabled", false);
			 							UI.modal.edit.getUIElement ("dialcodesremove").setAttribute ("disabled", false);
			 						}
			 						else
			 						{
			 							UI.modal.edit.getUIElement ("dialcodesedit").setAttribute ("disabled", true);
			 							UI.modal.edit.getUIElement ("dialcodesremove").setAttribute ("disabled", true);
			 						}		 
			 						
			 						if (UI.modal.edit.getUIElement ("alternativnames").getItem ())
			 						{
			 							UI.modal.edit.getUIElement ("alternativnamesedit").setAttribute ("disabled", false);
			 							UI.modal.edit.getUIElement ("alternativnamesremove").setAttribute ("disabled", false);
			 						}
			 						else
			 						{
			 							UI.modal.edit.getUIElement ("alternativnamesedit").setAttribute ("disabled", true);
			 							UI.modal.edit.getUIElement ("alternativnamesremove").setAttribute ("disabled", true);
			 						}		 
								};
				
				// SAVE
				var save =		function ()
								{				
									var item = get ();						
									qnax.voip.countrycode.save (item);
									console.log (item)
									switch (Mode)
									{
										case "new":
										{										
											UI.elements.content.countrycodes.addItem (item);
											break;
										}
									
										case "edit":
										{
											UI.elements.content.countrycodes.setItem (item);
											break;
										}
									}
																		
									UI.modal.edit.dispose ();					
								};
																			
				// SET
				var set = 		function ()
								{
									UI.modal.edit.getUIElement ("name").setAttribute ("value", Item["name"]);
									UI.modal.edit.getUIElement ("dialcodes").setItems (Item["dialcodes"]);
									UI.modal.edit.getUIElement ("alternativnames").setItems (Item["alternativnames"]);									
								};
						
				// GET		
				var get =		function ()
								{
									var item = {};
									item["id"] = Item["id"];
									item["name"] = UI.modal.edit.getUIElement ("name").getAttribute ("value");
									item["dialcodes"] = UI.modal.edit.getUIElement ("dialcodes").getItems ();
									item["alternativnames"] = UI.modal.edit.getUIElement ("alternativnames").getItems ();																	
									return item;									
								};
														
				// INIT
				sorento.console.modal.create ({tag: "edit", SUIXML: "/qnax/xml/voip/countrycodes/edit.xml"});
												
				UI.modal.edit.getUIElement ("name").setAttribute ("onChange", refresh);
				
				UI.modal.edit.getUIElement ("dialcodes").setAttribute ("onChange", refresh);
				UI.modal.edit.getUIElement ("alternativnames").setAttribute ("onChange", refresh);				
				
				UI.modal.edit.getUIElement ("dialcodesadd").setAttribute ("onClick", dialcodes.add);
				UI.modal.edit.getUIElement ("dialcodesedit").setAttribute ("onClick", dialcodes.edit);
				UI.modal.edit.getUIElement ("dialcodesremove").setAttribute ("onClick", dialcodes.remove);
				
				UI.modal.edit.getUIElement ("alternativnamesadd").setAttribute ("onClick", alternativnames.add);
				UI.modal.edit.getUIElement ("alternativnamesedit").setAttribute ("onClick", alternativnames.edit);
				UI.modal.edit.getUIElement ("alternativnamesremove").setAttribute ("onClick", alternativnames.remove);
								
				UI.modal.edit.getUIElement ("save").setAttribute ("onClick", save);	
				UI.modal.edit.getUIElement ("close").setAttribute ("onClick", UI.modal.edit.dispose);													
				
				switch (Mode)
				{
					case "new":
					{
						UI.modal.edit.getUIElement ("container").setAttribute ("title", "Create new countrycode");
						break;
					}
					
					case "edit":
					{
						UI.modal.edit.getUIElement ("container").setAttribute ("title", "Edit countrycode");					
						break;					
					}
				}				
				
				// SET
				set ();
				
				// SHOW
				UI.modal.edit.show (Item);
			},
			
			// ######################################################################################################################################
			// # COUNTRYCODES.DELETE
			// ######################################################################################################################################
			delete : function ()
			{
				var action =	function (result)
								{
									if (result == 1)
									{
										var id = UI.elements.content.countrycodes.getItem ()["id"];
										if (qnax.voip.countrycode.delete (id))
										{
											UI.elements.content.countrycodes.removeItem ();
										}										
									}
								};
		
				sorento.console.modal.question ({text: "Do you really want to delete this countrycode ?", buttonLabel: "Yes|No", onDone: action});					
			}			
		};
		
		// ##########################################################################################################################################
		// # UI
		// ##########################################################################################################################################
		UI.init = 		function ()
						{
							UI.elements.content.countrycodes.setAttribute ("onChange", UI.refresh);
			
							UI.elements.content.countrycodescreate.setAttribute ("onClick", countrycodes.create);
							UI.elements.content.countrycodesedit.setAttribute ("onClick", countrycodes.edit);
							UI.elements.content.countrycodesdelete.setAttribute ("onClick", countrycodes.delete);
						 				 				
							UI.update ();
							UI.refresh ();			 
							SNDK.SUI.init ();
						};
						
		UI.refresh = 	function ()
						{					 				 
			 				if (UI.elements.content.countrycodes.getItem ())
			 				{
			 					UI.elements.content.countrycodesedit.setAttribute ("disabled", false);
			 					UI.elements.content.countrycodesdelete.setAttribute ("disabled", false);
			 				}
			 				else
			 				{
			 					UI.elements.content.countrycodesedit.setAttribute ("disabled", true);
			 					UI.elements.content.countrycodesdelete.setAttribute ("disabled", true);
			 				}		 
						};		
						
		UI.update = 	function ()
						{
							UI.elements.content.countrycodes.setItems (qnax.voip.countrycode.list ());
						};
								
		UI.init ();
						
	</script>

	<%Include ($body)%>
	
</html>
